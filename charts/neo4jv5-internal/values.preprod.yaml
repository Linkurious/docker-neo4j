# https://github.com/neo4j/helm-charts/blob/dev/neo4j/values.yaml

neo4j:

  securityContext:
    runAsNonRoot: true
    runAsUser: 7474
    runAsGroup: 7474
    fsGroup: 7474
    seccompProfile:
      type: RuntimeDefault

  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop: ['ALL']

  disableLookups: true
  neo4j:
    name: neo4jv5-internal
    resources:
      requests:
        cpu: 1000m
        memory: "2Gi"
      limits:
        cpu: 2000m
        memory: "2Gi"

    # Uncomment to set the initial password
    # password: "my-initial-password"
    passwordFromSecret: "neo4j-admin-auth"

    # Uncomment to use enterprise edition
    edition: "enterprise"
    acceptLicenseAgreement: "yes"
  config:

    # used to workaround lack of config in helm chart
    DATASETS_JSON: |-
      [
        {
          "name": "aml-2.0.1",
          "neo4j_version": "5.3.0"
        },
        {
          "name": "crunchbase-2.0.0",
          "neo4j_version": "5.3.0"
        },
        {
          "name": "fincrime-2.0.0",
          "neo4j_version": "5.3.0"
        },
        {
          "name": "icij-senzing-3.0.0",
          "neo4j_version": "5.24.21"
        },
        {
          "name": "icij-senzing-2.0.0",
          "neo4j_version": "5.24.21"
        }
      ]

  podSpec:
    initContainers:
      - name: git-sync
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ['ALL']
        image: k8s.gcr.io/git-sync/git-sync:v3.6.2
        env:
        - name: GIT_SYNC_REPO
          value: https://github.com/Linkurious/docker-neo4j
        - name: GIT_SYNC_DEST
          value: docker-neo4j
        - name: GIT_SYNC_BRANCH
          value: develop
        - name: GIT_SYNC_ONE_TIME
          value: 'true'
        volumeMounts:
          - name: data
            mountPath: /tmp/git/
      - name: neo4j-restore
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ['ALL']
        # command: ['ls', '-lah', '/data/git-sync/', '&&', '/data/git-sync/docker-neo4j/scripts/dataset-download.sh']
        command: ['/data/docker-neo4j/scripts/dataset-download.sh', '-p', '/data']
        envFrom:
          - secretRef:
              name: neo4j-nexus-dataset-secret # imports NEXUS_TOKEN
        volumeMounts:
          - name: data
            mountPath: /data/
          - name: neo4j-conf
            mountPath: "/config/neo4j.conf"

